/* generated by Svelte v3.38.3 */
import {
  compute_rest_props,
  create_ssr_component,
  missing_component,
  validate_component,
} from 'svelte/internal';

import devalue from 'devalue';
let s = 'script';

const Component = create_ssr_component(
  ($$result, $$props, $$bindings, slots) => {
    let $$restProps = compute_rest_props($$props, ['this', 'hash']);
    let { this: component } = $$props;
    let { hash } = $$props;
    let serializedProps = devalue({ component: hash, props: $$restProps });
    let hydrationData = `julienneComponents = window.julienneComponents || []; julienneComponents.push(${serializedProps})`;
    let hydrationDataScript = `<${s} data-julienne type="application/javascript">${hydrationData}</${s}>`;
    if ($$props.this === void 0 && $$bindings.this && component !== void 0)
      $$bindings.this(component);
    if ($$props.hash === void 0 && $$bindings.hash && hash !== void 0)
      $$bindings.hash(hash);

    return `${hydrationDataScript}

${validate_component(
  component || missing_component,
  'svelte:component',
).$$render(
  $$result,
  Object.assign($$restProps),
  {},
  {
    default: () => `${slots.default ? slots.default({}) : ``}`,
  },
)}`;
  },
);

export default Component;
